{"version":3,"sources":["components/PageContent.js","components/Pagination/Pagination.js","App.js","index.js"],"names":["PageContent","React","memo","pageContent","map","element","key","propTypes","PropTypes","arrayOf","number","isRequired","Pagination","createNumberSequence","maxNumber","Array","fill","_","index","fillContent","page","content","props","total","perPage","firstContentItem","i","push","filter","num","previousButtonHandler","onPageChange","nextButtonHandler","this","withInfo","maxPage","Math","ceil","pages","className","type","onClick","disabled","pageNumber","classNames","pagination__link_active","PureComponent","defaultProps","App","state","selectedPage","changePage","setState","onPerPageChange","event","value","target","name","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36e1c7a3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const PageContent = React.memo(({ pageContent }) => (\n  <ul>\n    {pageContent.map(element => (\n      <li key={element}>\n        {element}\n      </li>\n    ))}\n  </ul>\n));\n\nPageContent.propTypes = {\n  pageContent: PropTypes.arrayOf(PropTypes.number).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { PageContent } from '../PageContent';\n\nimport './Pagination.scss';\n\nexport class Pagination extends React.PureComponent {\n  createNumberSequence = maxNumber => (\n    Array(maxNumber).fill(0).map((_, index) => index + 1)\n  )\n\n  fillContent = (page) => {\n    const content = [];\n    const {\n      total,\n      perPage,\n    } = this.props;\n    const firstContentItem = ((page - 1) * perPage) + 1;\n\n    // eslint-disable-next-line no-plusplus\n    for (let i = firstContentItem; i < (firstContentItem + perPage); i++) {\n      content.push(i);\n    }\n\n    return content.filter(num => num <= total);\n  }\n\n  previousButtonHandler = () => {\n    const {\n      page,\n      onPageChange,\n    } = this.props;\n\n    return onPageChange(page - 1);\n  }\n\n  nextButtonHandler = () => {\n    const {\n      page,\n      onPageChange,\n    } = this.props;\n\n    return onPageChange(page + 1);\n  }\n\n  render() {\n    const {\n      total,\n      page,\n      perPage,\n      onPageChange,\n      withInfo,\n    } = this.props;\n\n    const pageContent = this.fillContent(page);\n    const maxPage = Math.ceil(total / perPage);\n    const pages = this.createNumberSequence(maxPage);\n\n    return (\n      <>\n        {withInfo && (\n          <p className=\"visibleItems\">\n            {`\n              ${pageContent[0]} - \n              ${pageContent[perPage - 1] || total}\n              of ${total}\n            `}\n          </p>\n        )}\n\n        <ul className=\"pagination\">\n          <li className=\"pagination__item\">\n            <button\n              className=\"pagination__link\"\n              type=\"button\"\n              onClick={this.previousButtonHandler}\n              disabled={page === 1}\n            >\n              Previous\n            </button>\n          </li>\n\n          {pages.map(pageNumber => (\n            <li className=\"pagination__item\" key={pageNumber}>\n              <button\n                className={classNames(\n                  'pagination__link',\n                  { pagination__link_active: pageNumber === page },\n                )}\n                type=\"button\"\n                onClick={() => (\n                  onPageChange(pageNumber)\n                )}\n              >\n                {pageNumber}\n              </button>\n            </li>\n          ))}\n\n          <li className=\"pagination__item\">\n            <button\n              className=\"pagination__link\"\n              type=\"button\"\n              onClick={this.nextButtonHandler}\n              disabled={page === maxPage}\n            >\n              Next\n            </button>\n          </li>\n        </ul>\n\n        <PageContent pageContent={pageContent} />\n      </>\n    );\n  }\n}\n\nPagination.propTypes = {\n  total: PropTypes.number.isRequired,\n  perPage: PropTypes.number,\n  page: PropTypes.number,\n  onPageChange: PropTypes.func.isRequired,\n  withInfo: PropTypes.bool,\n};\n\nPagination.defaultProps = {\n  perPage: 5,\n  page: 1,\n  withInfo: false,\n};\n","import React from 'react';\nimport { Pagination } from './components/Pagination';\n\nimport './App.scss';\n\nclass App extends React.PureComponent {\n  state = {\n    selectedPage: 1,\n    perPage: 5,\n  }\n\n  changePage = pageNumber => (\n    // eslint-disable-next-line consistent-return\n    this.setState((state) => {\n      if (pageNumber !== state.selectedPage) {\n        return {\n          selectedPage: pageNumber,\n        };\n      }\n    })\n  )\n\n  onPerPageChange = (event) => {\n    const value = +event.target.value;\n\n    return this.setState({\n      selectedPage: 1,\n      perPage: value,\n    });\n  }\n\n  render() {\n    const {\n      selectedPage,\n      perPage,\n    } = this.state;\n\n    return (\n      <>\n        <select\n          name=\"per-page\"\n          value={perPage}\n          onChange={this.onPerPageChange}\n        >\n          <option value=\"3\">\n            3\n          </option>\n\n          <option value=\"5\">\n            5\n          </option>\n\n          <option value=\"10\">\n            10\n          </option>\n\n          <option value=\"20\">\n            20\n          </option>\n        </select>\n\n        <Pagination\n          total={42}\n          page={selectedPage}\n          perPage={perPage}\n          onPageChange={this.changePage}\n          withInfo\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}